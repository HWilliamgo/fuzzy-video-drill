apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

Properties properties = new Properties()
if (project.rootProject.file('local.properties').canRead()) {
    properties.load(project.rootProject.file("local.properties").newDataInputStream())
}
def rtmp_url = properties.getProperty("RTMP_PUSH_URL", "rtmp://gradle_default")

android {
    compileSdkVersion AppConfig.compileSdkVersion
    buildToolsVersion AppConfig.buildToolsVersion

    defaultConfig {
        applicationId AppConfig.applicationId
        minSdkVersion AppConfig.minSdkVersion
        targetSdkVersion AppConfig.targetSdkVersion
        versionCode AppConfig.versionCode
        versionName AppConfig.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField("String", "RTMP_PUSH_URL", rtmp_url)
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])

    implementation project(":livertmp")

    // ViewModel
    implementation Dependencies.viewmodel_ktx
    // LiveData
    implementation Dependencies.livedata_ktx
    implementation Dependencies.lifecycle_runtime_ktx
    // coroutines
    implementation Dependencies.coroutines_android
    implementation Dependencies.kotlin_stdlib
    implementation Dependencies.core_ktx
    implementation Dependencies.app_compat
    implementation Dependencies.constraintlayout
    implementation Dependencies.material
    //utilcodex
    implementation Dependencies.utilcodex
    //fastpermission
    implementation Dependencies.fastpermission_x
    //websocket
    implementation Dependencies.websocket
    testImplementation Dependencies.junit
    androidTestImplementation Dependencies.androidx_junit
    androidTestImplementation Dependencies.espresso_core
}